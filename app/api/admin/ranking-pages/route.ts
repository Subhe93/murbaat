import { NextRequest, NextResponse } from "next/server";
import {
  getRankingPages,
  createRankingPage,
  getRankingPagesStats,
} from "@/lib/database/ranking-queries";
import { CreateRankingPageData } from "@/lib/types/database";

/**
 * GET /api/admin/ranking-pages
 * الحصول على قائمة صفحات التصنيف
 */
export async function GET(request: NextRequest) {
  try {
    const searchParams = request.nextUrl.searchParams;

    // استخراج معاملات الاستعلام
    const filters = {
      country: searchParams.get("country") || undefined,
      city: searchParams.get("city") || undefined,
      subArea: searchParams.get("subArea") || undefined,
      category: searchParams.get("category") || undefined,
      subCategory: searchParams.get("subCategory") || undefined,
      isActive:
        searchParams.get("isActive") === "true"
          ? true
          : searchParams.get("isActive") === "false"
          ? false
          : undefined,
      isAutoGenerated:
        searchParams.get("isAutoGenerated") === "true"
          ? true
          : searchParams.get("isAutoGenerated") === "false"
          ? false
          : undefined,
      page: parseInt(searchParams.get("page") || "1"),
      limit: parseInt(searchParams.get("limit") || "20"),
      sortBy: (searchParams.get("sortBy") as any) || "newest",
      sortOrder: (searchParams.get("sortOrder") as "asc" | "desc") || "desc",
    };

    // جلب البيانات
    const result = await getRankingPages(filters);

    // جلب الإحصائيات أيضاً
    const stats = await getRankingPagesStats();

    return NextResponse.json({
      success: true,
      data: result.data,
      pagination: result.pagination,
      stats,
    });
  } catch (error) {
    console.error("خطأ في جلب صفحات التصنيف:", error);
    return NextResponse.json(
      {
        success: false,
        error: {
          code: "FETCH_ERROR",
          message: "حدث خطأ أثناء جلب صفحات التصنيف",
        },
      },
      { status: 500 }
    );
  }
}

/**
 * POST /api/admin/ranking-pages
 * إنشاء صفحة تصنيف جديدة
 */
export async function POST(request: NextRequest) {
  try {
    const body = await request.json();

    // التحقق من البيانات المطلوبة
    if (!body.slug || !body.title) {
      return NextResponse.json(
        {
          success: false,
          error: {
            code: "VALIDATION_ERROR",
            message: "الرجاء إدخال الـ slug والعنوان",
          },
        },
        { status: 400 }
      );
    }

    // إنشاء صفحة جديدة
    const data: CreateRankingPageData = {
      slug: body.slug,
      title: body.title,
      description: body.description,
      content: body.content,
      metaTitle: body.metaTitle,
      metaDescription: body.metaDescription,
      metaKeywords: body.metaKeywords || [],
      countryId: body.countryId || undefined,
      cityId: body.cityId || undefined,
      subAreaId: body.subAreaId || undefined,
      categoryId: body.categoryId || undefined,
      subCategoryId: body.subCategoryId || undefined,
      limit: body.limit || 10,
      sortBy: body.sortBy || "rating",
      customCompanies: body.customCompanies || [],
      excludedCompanies: body.excludedCompanies || [],
      isActive: body.isActive !== undefined ? body.isActive : true,
      isAutoGenerated: false,
      publishedAt: body.publishedAt ? new Date(body.publishedAt) : new Date(),
    };

    const rankingPage = await createRankingPage(data);

    return NextResponse.json({
      success: true,
      data: rankingPage,
      message: "تم إنشاء صفحة التصنيف بنجاح",
    });
  } catch (error: any) {
    console.error("خطأ في إنشاء صفحة التصنيف:", error);

    // التحقق من خطأ التكرار (slug موجود مسبقاً)
    if (error.code === "P2002") {
      return NextResponse.json(
        {
          success: false,
          error: {
            code: "DUPLICATE_SLUG",
            message: "هذا الـ slug موجود بالفعل",
          },
        },
        { status: 400 }
      );
    }

    return NextResponse.json(
      {
        success: false,
        error: {
          code: "CREATE_ERROR",
          message: "حدث خطأ أثناء إنشاء صفحة التصنيف",
        },
      },
      { status: 500 }
    );
  }
}


