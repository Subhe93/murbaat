"use client";

import { useState, useEffect } from "react";
import Link from "next/link";
import {
  Plus,
  Search,
  Filter,
  Eye,
  Edit,
  Trash2,
  MoreVertical,
  Check,
  X,
  Zap,
  TrendingUp,
  FileText,
  BarChart3,
} from "lucide-react";

interface RankingPage {
  id: string;
  slug: string;
  title: string;
  description?: string;
  viewsCount: number;
  clicksCount: number;
  isActive: boolean;
  isAutoGenerated: boolean;
  publishedAt?: string;
  createdAt: string;
  country?: { name: string; code: string };
  city?: { name: string; slug: string };
  category?: { name: string; slug: string };
  subCategory?: { name: string; slug: string };
}

interface Stats {
  total: number;
  active: number;
  inactive: number;
  autoGenerated: number;
  manual: number;
  totalViews: number;
  totalClicks: number;
}

export default function RankingPagesListPage() {
  const [pages, setPages] = useState<RankingPage[]>([]);
  const [stats, setStats] = useState<Stats | null>(null);
  const [loading, setLoading] = useState(true);
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedPages, setSelectedPages] = useState<string[]>([]);
  const [currentPage, setCurrentPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
  const [filters, setFilters] = useState({
    isActive: "",
    isAutoGenerated: "",
  });

  // جلب البيانات
  const fetchPages = async () => {
    setLoading(true);
    try {
      const params = new URLSearchParams({
        page: currentPage.toString(),
        limit: "20",
        ...(filters.isActive && { isActive: filters.isActive }),
        ...(filters.isAutoGenerated && {
          isAutoGenerated: filters.isAutoGenerated,
        }),
      });

      const response = await fetch(`/api/admin/ranking-pages?${params}`);
      const data = await response.json();

      if (data.success) {
        setPages(data.data);
        setStats(data.stats);
        setTotalPages(data.pagination.totalPages);
      }
    } catch (error) {
      console.error("خطأ في جلب البيانات:", error);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPages();
  }, [currentPage, filters]);

  // حذف صفحة
  const handleDelete = async (id: string) => {
    if (!confirm("هل أنت متأكد من حذف هذه الصفحة؟")) return;

    try {
      const response = await fetch(`/api/admin/ranking-pages/${id}`, {
        method: "DELETE",
      });

      const data = await response.json();

      if (data.success) {
        alert("تم حذف الصفحة بنجاح");
        fetchPages();
      } else {
        alert("حدث خطأ أثناء حذف الصفحة");
      }
    } catch (error) {
      console.error("خطأ في حذف الصفحة:", error);
      alert("حدث خطأ أثناء حذف الصفحة");
    }
  };

  // حذف متعدد
  const handleBulkDelete = async () => {
    if (selectedPages.length === 0) return;
    if (
      !confirm(`هل أنت متأكد من حذف ${selectedPages.length} صفحة؟`)
    )
      return;

    try {
      const response = await fetch("/api/admin/ranking-pages/bulk-delete", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ ids: selectedPages }),
      });

      const data = await response.json();

      if (data.success) {
        alert(`تم حذف ${data.data.deletedCount} صفحة بنجاح`);
        setSelectedPages([]);
        fetchPages();
      } else {
        alert("حدث خطأ أثناء حذف الصفحات");
      }
    } catch (error) {
      console.error("خطأ في حذف الصفحات:", error);
      alert("حدث خطأ أثناء حذف الصفحات");
    }
  };

  // تحديد/إلغاء تحديد الكل
  const toggleSelectAll = () => {
    if (selectedPages.length === pages.length) {
      setSelectedPages([]);
    } else {
      setSelectedPages(pages.map((p) => p.id));
    }
  };

  // تصفية الصفحات حسب البحث
  const filteredPages = pages.filter(
    (page) =>
      page.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
      page.slug.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return (
    <div className="p-6 space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">صفحات التصنيف</h1>
          <p className="text-gray-600 mt-1">
            إدارة صفحات التصنيف للأرشفة في محركات البحث
          </p>
        </div>
        <div className="flex gap-3">
          <Link
            href="/admin/ranking-pages/generate"
            className="flex items-center gap-2 bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white px-4 py-2 rounded-lg font-semibold transition-all shadow-md"
          >
            <Zap className="w-5 h-5" />
            توليد تلقائي
          </Link>
          <Link
            href="/admin/ranking-pages/new"
            className="flex items-center gap-2 bg-primary hover:bg-primary-dark text-white px-4 py-2 rounded-lg font-semibold transition-colors"
          >
            <Plus className="w-5 h-5" />
            إضافة صفحة جديدة
          </Link>
        </div>
      </div>

      {/* Statistics Cards */}
      {stats && (
        <div className="grid grid-cols-1 md:grid-cols-4 lg:grid-cols-7 gap-4">
          <div className="bg-white rounded-lg shadow-sm p-4 border-r-4 border-blue-500">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">إجمالي الصفحات</p>
                <p className="text-2xl font-bold text-gray-900">{stats.total}</p>
              </div>
              <FileText className="w-8 h-8 text-blue-500" />
            </div>
          </div>

          <div className="bg-white rounded-lg shadow-sm p-4 border-r-4 border-green-500">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">نشطة</p>
                <p className="text-2xl font-bold text-gray-900">{stats.active}</p>
              </div>
              <Check className="w-8 h-8 text-green-500" />
            </div>
          </div>

          <div className="bg-white rounded-lg shadow-sm p-4 border-r-4 border-red-500">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">غير نشطة</p>
                <p className="text-2xl font-bold text-gray-900">
                  {stats.inactive}
                </p>
              </div>
              <X className="w-8 h-8 text-red-500" />
            </div>
          </div>

          <div className="bg-white rounded-lg shadow-sm p-4 border-r-4 border-purple-500">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">تلقائية</p>
                <p className="text-2xl font-bold text-gray-900">
                  {stats.autoGenerated}
                </p>
              </div>
              <Zap className="w-8 h-8 text-purple-500" />
            </div>
          </div>

          <div className="bg-white rounded-lg shadow-sm p-4 border-r-4 border-amber-500">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">يدوية</p>
                <p className="text-2xl font-bold text-gray-900">
                  {stats.manual}
                </p>
              </div>
              <Edit className="w-8 h-8 text-amber-500" />
            </div>
          </div>

          <div className="bg-white rounded-lg shadow-sm p-4 border-r-4 border-indigo-500">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">المشاهدات</p>
                <p className="text-2xl font-bold text-gray-900">
                  {stats.totalViews.toLocaleString()}
                </p>
              </div>
              <Eye className="w-8 h-8 text-indigo-500" />
            </div>
          </div>

          <div className="bg-white rounded-lg shadow-sm p-4 border-r-4 border-pink-500">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm text-gray-600">النقرات</p>
                <p className="text-2xl font-bold text-gray-900">
                  {stats.totalClicks.toLocaleString()}
                </p>
              </div>
              <TrendingUp className="w-8 h-8 text-pink-500" />
            </div>
          </div>
        </div>
      )}

      {/* Search and Filters */}
      <div className="bg-white rounded-lg shadow-sm p-4">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
          <div className="md:col-span-2">
            <div className="relative">
              <Search className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
              <input
                type="text"
                placeholder="بحث بالعنوان أو slug..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="w-full pr-10 pl-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-primary"
              />
            </div>
          </div>

          <select
            value={filters.isActive}
            onChange={(e) =>
              setFilters({ ...filters, isActive: e.target.value })
            }
            className="border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-primary focus:border-primary"
          >
            <option value="">الحالة: الكل</option>
            <option value="true">نشطة</option>
            <option value="false">غير نشطة</option>
          </select>

          <select
            value={filters.isAutoGenerated}
            onChange={(e) =>
              setFilters({ ...filters, isAutoGenerated: e.target.value })
            }
            className="border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-primary focus:border-primary"
          >
            <option value="">النوع: الكل</option>
            <option value="true">تلقائية</option>
            <option value="false">يدوية</option>
          </select>
        </div>

        {selectedPages.length > 0 && (
          <div className="mt-4 flex items-center gap-4 p-3 bg-blue-50 rounded-lg">
            <span className="text-blue-700 font-semibold">
              تم تحديد {selectedPages.length} صفحة
            </span>
            <button
              onClick={handleBulkDelete}
              className="flex items-center gap-2 bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors"
            >
              <Trash2 className="w-4 h-4" />
              حذف المحدد
            </button>
          </div>
        )}
      </div>

      {/* Table */}
      <div className="bg-white rounded-lg shadow-sm overflow-hidden">
        <div className="overflow-x-auto">
          <table className="w-full">
            <thead className="bg-gray-50 border-b border-gray-200">
              <tr>
                <th className="px-4 py-3 text-right">
                  <input
                    type="checkbox"
                    checked={
                      selectedPages.length === pages.length &&
                      pages.length > 0
                    }
                    onChange={toggleSelectAll}
                    className="rounded border-gray-300 text-primary focus:ring-primary"
                  />
                </th>
                <th className="px-4 py-3 text-right text-sm font-semibold text-gray-700">
                  العنوان
                </th>
                <th className="px-4 py-3 text-right text-sm font-semibold text-gray-700">
                  الموقع / الفئة
                </th>
                <th className="px-4 py-3 text-center text-sm font-semibold text-gray-700">
                  المشاهدات
                </th>
                <th className="px-4 py-3 text-center text-sm font-semibold text-gray-700">
                  النقرات
                </th>
                <th className="px-4 py-3 text-center text-sm font-semibold text-gray-700">
                  النوع
                </th>
                <th className="px-4 py-3 text-center text-sm font-semibold text-gray-700">
                  الحالة
                </th>
                <th className="px-4 py-3 text-center text-sm font-semibold text-gray-700">
                  الإجراءات
                </th>
              </tr>
            </thead>
            <tbody className="divide-y divide-gray-200">
              {loading ? (
                <tr>
                  <td colSpan={8} className="px-4 py-8 text-center">
                    <div className="flex items-center justify-center">
                      <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
                    </div>
                  </td>
                </tr>
              ) : filteredPages.length === 0 ? (
                <tr>
                  <td
                    colSpan={8}
                    className="px-4 py-8 text-center text-gray-500"
                  >
                    لا توجد صفحات
                  </td>
                </tr>
              ) : (
                filteredPages.map((page) => (
                  <tr
                    key={page.id}
                    className="hover:bg-gray-50 transition-colors"
                  >
                    <td className="px-4 py-3">
                      <input
                        type="checkbox"
                        checked={selectedPages.includes(page.id)}
                        onChange={() => {
                          if (selectedPages.includes(page.id)) {
                            setSelectedPages(
                              selectedPages.filter((id) => id !== page.id)
                            );
                          } else {
                            setSelectedPages([...selectedPages, page.id]);
                          }
                        }}
                        className="rounded border-gray-300 text-primary focus:ring-primary"
                      />
                    </td>
                    <td className="px-4 py-3">
                      <div>
                        <p className="font-semibold text-gray-900">
                          {page.title}
                        </p>
                        <p className="text-sm text-gray-500 font-mono">
                          /{page.slug}
                        </p>
                      </div>
                    </td>
                    <td className="px-4 py-3">
                      <div className="text-sm">
                        {page.country && (
                          <p className="text-gray-700">
                            {page.country.name}
                            {page.city && ` / ${page.city.name}`}
                          </p>
                        )}
                        {page.category && (
                          <p className="text-gray-600">
                            {page.category.name}
                            {page.subCategory && ` / ${page.subCategory.name}`}
                          </p>
                        )}
                      </div>
                    </td>
                    <td className="px-4 py-3 text-center">
                      <span className="inline-flex items-center gap-1 text-gray-700">
                        <Eye className="w-4 h-4" />
                        {page.viewsCount.toLocaleString()}
                      </span>
                    </td>
                    <td className="px-4 py-3 text-center">
                      <span className="text-gray-700">
                        {page.clicksCount.toLocaleString()}
                      </span>
                    </td>
                    <td className="px-4 py-3 text-center">
                      {page.isAutoGenerated ? (
                        <span className="inline-flex items-center gap-1 bg-purple-100 text-purple-700 px-2 py-1 rounded-full text-xs font-semibold">
                          <Zap className="w-3 h-3" />
                          تلقائية
                        </span>
                      ) : (
                        <span className="bg-amber-100 text-amber-700 px-2 py-1 rounded-full text-xs font-semibold">
                          يدوية
                        </span>
                      )}
                    </td>
                    <td className="px-4 py-3 text-center">
                      {page.isActive ? (
                        <span className="bg-green-100 text-green-700 px-2 py-1 rounded-full text-xs font-semibold">
                          نشطة
                        </span>
                      ) : (
                        <span className="bg-red-100 text-red-700 px-2 py-1 rounded-full text-xs font-semibold">
                          غير نشطة
                        </span>
                      )}
                    </td>
                    <td className="px-4 py-3">
                      <div className="flex items-center justify-center gap-2">
                        <Link
                          href={`/ranking/${page.slug}`}
                          target="_blank"
                          className="p-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors"
                          title="معاينة"
                        >
                          <Eye className="w-4 h-4" />
                        </Link>
                        <Link
                          href={`/admin/ranking-pages/${page.id}/edit`}
                          className="p-2 text-amber-600 hover:bg-amber-50 rounded-lg transition-colors"
                          title="تعديل"
                        >
                          <Edit className="w-4 h-4" />
                        </Link>
                        <button
                          onClick={() => handleDelete(page.id)}
                          className="p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors"
                          title="حذف"
                        >
                          <Trash2 className="w-4 h-4" />
                        </button>
                      </div>
                    </td>
                  </tr>
                ))
              )}
            </tbody>
          </table>
        </div>

        {/* Pagination */}
        {totalPages > 1 && (
          <div className="flex items-center justify-between px-4 py-3 border-t border-gray-200">
            <button
              onClick={() => setCurrentPage(currentPage - 1)}
              disabled={currentPage === 1}
              className="px-4 py-2 border border-gray-300 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50"
            >
              السابق
            </button>
            <span className="text-gray-700">
              صفحة {currentPage} من {totalPages}
            </span>
            <button
              onClick={() => setCurrentPage(currentPage + 1)}
              disabled={currentPage === totalPages}
              className="px-4 py-2 border border-gray-300 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50"
            >
              التالي
            </button>
          </div>
        )}
      </div>
    </div>
  );
}


